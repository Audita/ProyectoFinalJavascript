/**
 * @license
 * Copyright (C) 2016 Dizzy <itsdizzy40@gmail.com>
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file.
 */
"use strict";
/**
 * Sets up the authentication configuration.
 */
var AuthConfig = (function () {
    function AuthConfig(config) {
        if (config === void 0) { config = {}; }
        this.globalHeaders = config.globalHeaders || [];
        this.headerName = config.headerName || 'Authorization';
        if (config.headerPrefix) {
            this.headerPrefix = config.headerPrefix + ' ';
        }
        else if (config.noTokenScheme) {
            this.headerPrefix = '';
        }
        else {
            this.headerPrefix = 'Bearer ';
        }
        this.noJwtError = config.noJwtError || false;
        this.noTokenScheme = config.noTokenScheme || false;
        this.guards = {
            loggedInGuard: config.guards.loggedInGuard || { redirectUrl: null },
            loggedOutGuard: config.guards.loggedOutGuard || { redirectUrl: null }
        };
    }
    AuthConfig.prototype.getConfig = function () {
        return {
            globalHeaders: this.globalHeaders,
            headerName: this.headerName,
            headerPrefix: this.headerPrefix,
            noJwtError: this.noJwtError,
            noTokenScheme: this.noTokenScheme,
            guards: this.guards
        };
    };
    return AuthConfig;
}());
exports.AuthConfig = AuthConfig;
//# sourceMappingURL=auth.config.js.map